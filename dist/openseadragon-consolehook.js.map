{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/consolehook.js"],"names":["OSD","$","Viewer","prototype","addConsoleHook","options","ConsoleHook","key","Object","hasOwnProperty","call","handler","origHandler","console","apply","arguments","version","versionStr","versionSplits","split","major","parseInt","minor","revision","OpenSeadragon","window","OpenSeadragonImaging"],"mappings":"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","file":"openseadragon-consolehook.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/consolehook.js\");\n","/*\n * Copyright (c) 2019 Mark Salsbery\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/* global OpenSeadragon */\n\n/**\n * @file\n * @version  openseadragon-consolehook 2.0.0\n * @author Mark Salsbery <msalsbery@hotmail.com>\n *\n */\n\n/**\n * @module openseadragon-consolehook\n * @version  openseadragon-consolehook 2.0.0\n *\n */\n\n\n(function (OSD, $) {\n\n\t// if (!OSD.version || OSD.version.major < 1) {\n\t// \tthrow new Error(\n\t// \t\t'OpenSeadragonConsoleHook requires OpenSeadragon version 1.0.0+'\n\t// \t);\n\t// }\n\n\t/**\n\t * Creates a new ConsoleHook.\n\t *\n\t * @method addConsoleHook\n\t * @memberof external:\"OpenSeadragon.Viewer\"#\n\t * @param {Object} options\n     * @param {Function} [options.log] - console.log function. Function can return true to prevent original function call.\n     * @param {Function} [options.debug] - console.debug function. Function can return true to prevent original function call.\n     * @param {Function} [options.info] - console.info function. Function can return true to prevent original function call.\n     * @param {Function} [options.warn] - console.warn function. Function can return true to prevent original function call.\n     * @param {Function} [options.error] - console.error function. Function can return true to prevent original function call.\n\t * @returns {OpenSeadragonImaging.ConsoleHook}\n\t *\n\t **/\n\tOSD.Viewer.prototype.addConsoleHook = function (options) {\n\t\toptions = options || {};\n\t\treturn new $.ConsoleHook(options);\n\t};\n\n    /**\n     * Creates a new OpenSeadragonImaging.ConsoleHook.\n     *\n     * @class ConsoleHook\n     * @classdesc Provides hooks into the OpenSeadragon console pipeline.\n     * @memberof OpenSeadragonImaging\n     * @param {Object} options\n     * @param {Function} [options.log] - console.log function. Function can return true to prevent original function call.\n     * @param {Function} [options.debug] - console.debug function. Function can return true to prevent original function call.\n     * @param {Function} [options.info] - console.info function. Function can return true to prevent original function call.\n     * @param {Function} [options.warn] - console.warn function. Function can return true to prevent original function call.\n     * @param {Function} [options.error] - console.error function. Function can return true to prevent original function call.\n     *\n     **/\n    $.ConsoleHook = function (options) {\n        options = options || {};\n\n        for (let key in options) {\n            if (Object.prototype.hasOwnProperty.call(options, key)) {\n\t\t\t\t/*jshint loopfunc:true*/\n\t\t\t\t// eslint-disable-next-line no-loop-func\n                (function (handler) {\n                    var origHandler = OSD.console[key];\n                    OSD.console[key] = function () {\n                        if (!handler.apply(this, arguments) && origHandler) {\n                            origHandler.apply(this, arguments);\n                        }\n                    };\n                }(options[key]));\n                /*jshint loopfunc:false*/\n            }\n        }\n    };\n\n\t/**\n\t * ConsoleHook version.\n\t * @member {Object} OpenSeadragonImaging.ConsoleHook.version\n\t * @property {String} versionStr - The version number as a string ('major.minor.revision').\n\t * @property {Number} major - The major version number.\n\t * @property {Number} minor - The minor version number.\n\t * @property {Number} revision - The revision number.\n\t */\n\t$.ConsoleHook.version = {\n\t\tversionStr: '2.0.0'\n\t};\n\tvar versionSplits = $.ConsoleHook.version.versionStr.split('.');\n\t$.ConsoleHook.version.major = parseInt(versionSplits[0], 10);\n\t$.ConsoleHook.version.minor = parseInt(versionSplits[1], 10);\n\t$.ConsoleHook.version.revision = parseInt(versionSplits[2], 10);\n\n\n}(OpenSeadragon, window.OpenSeadragonImaging = window.OpenSeadragonImaging || {}));\n\nexport default window.OpenSeadragonImaging.ConsoleHook;\n"],"sourceRoot":""}